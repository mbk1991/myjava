package algorithm.search.dfs;


/**
 * <깊이 우선 탐색 (Depth First Search)>
 * -그래프 완전 탐색 기법
 * -시작노드에서 분기를 정하여 최대 깊이까지 탐색하고 다른 분기로 이동하여 다시 탐색하는 반복하는 기법
 * -시간복잡도: O(N + E) - N:노드, E:엣지
 * -재귀(Recursive) 또는 스택(Stack)을 이용
 * -트리의 깊이가 무한대인 경우는 사용할 수 없음
 * -스택오버플로우 주의
 */

/**
 * <활용>
 * -단절점 찾기, 사이클 찾기, 백트래킹(모든 경우의 수를 전부 고려하는 알고리즘)
 */


/**
 * <수도 코드 (Pseudo Code)>
 * 1) 그래프 표현
 * 2) 방문 배열 초기화
 * 3) 시작 노드를 방문 배열에 기록하고 스택에 넣는다.
 * 4) 스택이 빌 때까지 다음을 반복한다.
 *   4-1) 스택에서 Pop하여 탐색(처리)한다.
 *   4-2) Pop한 노드의 인접 노드를 방문 배열에 기록하고 스택에 Push한다.
 */
public class DepthFirstSearch {




}
